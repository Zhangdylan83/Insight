# Training Configuration

task: "classification"                     # Task type: 'segmentation' or 'classification'

paths:                                     # Paths to input datasets
  - "/path/to/normal/h5/files/"
  - "/path/to/covid/h5/files/"

labels:                                    # Corresponding labels for the datasets
  - 0
  - 1

test_path: "/path/to/test/h5/files/"           # Path to test data
ground_truth_path: "/path/to/ground_truth/h5/files" # Path to ground truth masks (for segmentation)

model: "models.YourModel.YourClass"        # Module and class name for the model

save:                                      # Save settings
  path: "/path/to/save/model_checkpoints/" # Directory to save model checkpoints

# Model Hyperparameters
model_params:
  alpha: <alpha_value>                     # Alpha value for the model to control smoothmax.
  lambda_sd: <lambda_sd_value>             # Regularization parameter for Spectrum Decoupling

# Training Hyperparameters(Optional. Can use default setup)
training:
  lr: <learning_rate>                      # Learning rate
  optimizer: "<optimizer_type>"            # Optimizer type ('adam', 'adamw', etc.)
  weight_decay: <weight_decay_value>       # Weight decay for regularization
  batch_size: <batch_size_value>           # Batch size for training
  num_epochs: <num_epochs_value>           # Number of training epochs
  split_ratios: [<train_split>, <val_split>] # Train-validation split ratios
  max_samples: <max_samples_value>         # Maximum samples to use (for testing or debugging)

# Cross-Validation (Classification Only)
cross_validation:
  n_splits: 5                              # Number of splits for cross-validation
  fold_index: 0                            # Current fold index


loss_weights:
  pos_weight: <positive_class_weight>      # Positive class weight for BCE loss
  neg_weight: <negative_class_weight>      # Negative class weight for BCE loss

seed: <random_seed>
