model:
  name: "models.YourModel.YourClass"  # Path to the model class
  chunk_size: <number_of_samples_per_chunk>  # Number of samples per chunk for large datasets
  pooling: "<pooling_method>"               # Pooling method: 'smoothmax' or 'maxpool'
  smoothmax_class: "utils.pooling.YourSmoothMaxClass"  # Path to SmoothMax class
  alpha: <alpha_value>                      # Alpha parameter for SmoothMax
  lambda_sd: <lambda_sd_value>              # Weight for spectral decoupling penalty
  patience: <early_stopping_patience>       # Early stopping patience

loss:
  type: "losses.YourLossClass"              # Path to custom loss class
  params:
    label_smoothing: <label_smoothing_value>  # Smoothing parameter
    pos_weight: <positive_class_weight>       # Positive class weight
    neg_weight: <negative_class_weight>       # Negative class weight

training:
  epochs: <number_of_epochs>               # Total number of epochs to train
  patience: <early_stopping_patience>      # Early stopping patience
  lr: <learning_rate>                      # Learning rate
  optimizer: "<optimizer_type>"            # Optimizer type ('adam', 'adamw', or 'ranger')
  weight_decay: <weight_decay_value>       # Weight decay for regularization
  batch_size: <batch_size_value>           # Batch size for training (Has to set to 1 as inputting single WSI each time!)
  split_ratios: [<train_split>, <val_split>] # Train-validation split ratios
  max_samples: <max_samples_value>         # Maximum samples to use (for testing or debugging)

save:
  path: "/path/to/save/model_checkpoints/"  # Directory to save model checkpoints

paths:
  normal: "/path/to/normal/h5/files/"      # Path to normal sample feature embedding files
  tumor: "/path/to/tumor/h5/files/"        # Path to tumor sample feature embeddingfiles
  test: "/path/to/test/h5/files/"          # Path to test sample feature embedding files
  output_file: "/path/to/output/file.csv"  # Path to save output test labels

wandb:
  project_name: "<project_name>"           # Project name for Weights & Biases logging
